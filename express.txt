# Url parameter
router.get('/:id', (req, res, next) => {
    let id = req.params.id;
})

# Query string
router.get('/, (req, res, next) => {
    console.log(req.query);
})

# Use async in express router
# https://medium.com/@Abazhenov/using-async-await-in-express-with-node-8-b8af872c0016
router.get('/user/:id', async (req, res, next) => {
  try {
    const user = await getUserFromDb({ id: req.params.id })
    res.json(user);
  } catch (e) {
    //this will eventually be handled by your error handling middleware
    next(e) 
  }
})

# Use async with wrapper library
$ npm install --save express-async-handler

const asyncHandler = require('express-async-handler')
 
express.get('/', asyncHandler(async (req, res, next) => {
    const bar = await foo.findAll();
    res.send(bar)
}))

# Error: request entity too large
# https://stackoverflow.com/questions/19917401/error-request-entity-too-large
app.use(express.bodyParser({ limit: '50mb' }));
app.use(bodyParser.json({ limit: '20mb' }));

# Enable CORS: npm install cors
const cors = require('cors')
const app = express()
app.use(cors())