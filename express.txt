# Url parameter
router.get('/:id', (req, res, next) => {
    let id = req.params.id;
})

# Query string
router.get('/, (req, res, next) => {
    console.log(req.query);
})

# Router wrapper that allows middleware to return promises
# https://github.com/express-promise-router/express-promise-router
# Exception thrown, will be caught automatically (i.e. dun need try catch inside async func)
router.get('/', async (req, res) => {
  res.send("Hello!")
});

# Error: request entity too large
# https://stackoverflow.com/questions/19917401/error-request-entity-too-large
app.use(express.bodyParser({ limit: '50mb' }));
app.use(bodyParser.json({ limit: '20mb' }));

# Enable CORS: npm install cors
const cors = require('cors')
const app = express()
app.use(cors())