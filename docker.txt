docker images  # check available images

docker run -d nginx:latest
docker run -d nginx:1.10.0  # detached

docker ps
docker ps -aq  # all, quiet (only id)
docker ps --format "{{.ID}} {{.Image}} {{.Names}}"

docker inspect <cid|name>
docker inspect -f '{{.Name}} - {{.NetworkSettings.IPAddress }}' $(sudo docker ps -aq)  # format the inspection only to key: name, ip address

docker stop <cid>
docker rm <cid>

Networking
============================================================
http://stackoverflow.com/questions/30545023/how-to-communicate-between-docker-containers-via-hostname
https://docs.docker.com/engine/userguide/networking/

============================================================
# Hint: http://stackoverflow.com/questions/35122773/single-command-to-stop-and-remove-docker-container/35122830
docker rm -f <cid>  # Force remove even if it's running
docker run --rm <image>  # Remove container when stopped
============================================================

docker build -t <name:tag> <path>

Pushing docker images
============================================================
docker tag monolith:1.0.0 <your username>/monolith:1.0.0  


# https://github.com/wsargent/docker-cheat-sheet
============================================================
docker create - creates a container but does not start it.
docker run - creates and starts a container in one operation.
docker stop - stops it.
docker start - will start it again.
docker restart - restarts a container.
docker rm - deletes a container.
docker kill - sends a SIGKILL to a container.
docker attach - will connect to a running container.
docker wait - blocks until container stops.

docker run --rm  -name container-foo # transient container
docker rm -v     # remove volumes associated with the container
docker run -t -i <myimage> <myshell>       # open tty from an image
docker exec -t -i <mycontainer> <myshell>  # open tty from a running container

# http://stackoverflow.com/questions/22907231/copying-files-from-host-to-docker-container
docker cp foo.txt mycontainer:/foo.txt
docker cp mycontainer:/foo.txt foo.txt

docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]

# Rename container
docker rename [OPTIONS] OLD_NAME NEW_NAME

Windows
===================================================
docker-machine create --driver virtualbox my-default
docker-machine ls  # List available machines
# Configure powershell
docker-machine env --shell powershell default | Invoke-Expression

docker-machine subcommands
---------------------------
https://docs.docker.com/machine/reference/
active config create env help inspect ip kill ls regenerate-certs restart rm scp ssh start status stop upgrade url

Load fedora base tar img
------------------------
docker load -i .\Fedora-Docker-Base-23-20151030.x86_64.tar.xz
docker run -it --rm Fedora-Docker-Base-23-20151030.x86_64 bash

Run apache
----------
docker run -p 80:80 -it --rm fedora-webserver /usr/sbin/httpd -DFOREGROUND