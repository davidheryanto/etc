# Word boundary
\bTEXT
\bTEXT\b

# Match all words in any order
# http://stackoverflow.com/questions/13911053/regular-expression-to-match-all-words-in-a-query-in-any-order
^(?=.*\bmeat\b)(?=.*\bpasta\b)(?=.*\bdinner\b).+

# Match line that does not contain a word
# http://stackoverflow.com/questions/406230/regular-expression-to-match-line-that-doesnt-contain-a-word
^((?!myword).)*$

# Wildcard non greedy
.*?

# Java 
# ==============
# Enable dot all: '.' matches newline too
# http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html#DOTALL
(?s)

# Capture groups non greedy
# http://stackoverflow.com/questions/766372/python-non-greedy-regexes
>>> x = "a (b) c (d) e"
>>> re.search(r"\(.*\)", x).group()
'(b) c (d)'
>>> re.search(r"\(.*?\)", x).group()
'(b)'

# Password regex: minimum 8 characters, at least 1 letter and 1 number
# https://stackoverflow.com/questions/19605150/regex-for-password-must-contain-at-least-eight-characters-at-least-one-number-a
^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$

# Semver regex: semantic versioning
# https://github.com/semver/semver/issues/232
^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$
