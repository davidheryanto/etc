# Getting started
=================================================================
# If using jupyter console, to setup visualization window
> %pylab

# (2,2,1) 2x2 figure, select the 1st subplot
fig = plt.figure()
ax1 = fig.add_subplot(2,2,1)
ax2 = fig.add_subplot(2,2,2)
ax3 = fig.add_subplot(2,2,3)

ax1.hist(randn(100), bins=20, color='k', alpha=0.3)
ax2.scatter(np.arange(30), np.arange(30) + 3 * randn(30))

# Colors, markers, line style
ax.plot(x, y, 'g--')
ax.plot(x, y, linestyle='--', color='g')  # linestyle='dashed'
ax.plot(data, 'k-', drawstyle='steps-post', label='steps-post')

# Ticks, labels, legends
ax.legend(loc='best')
ax.xlim([0, 10])
ax.set_xticks([0, 250, 500, 750, 1000])
ax.set_xticklabels(['one', 'two', 'three', 'four', 'five'], rotation=30, fontsize='small')

# Fill
ax.fill_between(x,y,alpha=0.5)

ax.set_title('My first matplotlib plot')
ax.set_xlabel('Stages')

# Annotations 
for date, label in crisis_data:
	ax.annotate(label, xy=(date, spx.asof(date) + 50),
		xytext=(date, spx.asof(date) + 200),
		arrowprops=dict(facecolor='black'),
		horizontalalignment='left', verticalalignment='top')

# Saving
plt.savefig('figpath.svg')
plt.savefig('figpath.png', dpi=400, bbox_inches='tight', pad_inches=0.3)

# Configuration
plt.rc('figure', figsize=(10, 10))

font_options = {'family' : 'monospace',
				'weight' : 'bold',
				'size'
				: 'small'}
plt.rc('font', **font_options)

# Vertical or rotate xaxis
plt.xticks(rotation=90)

# Smooth plot
# https://stackoverflow.com/questions/5283649/plot-smooth-line-with-pyplot
from scipy.interpolate import spline

x = ...
y = ...

xnew = np.linspace(x.min(), x.max(), 500)
ynew = spline(x, y, xnew)

plt.plot(xnew,ynew)

=================================================================

# Draw circle
plt.scatter(x, y, s=80, facecolors='none', edgecolors='r')

# Set default size
# http://stackoverflow.com/questions/17230797/how-to-set-the-matplotlib-figure-default-size-in-ipython-notebook
pylab.rcParams['figure.figsize'] = (10.0, 8.0)

# Set title to figure
pyplot.suptitle

# Plot different color with colormaps
# http://stackoverflow.com/questions/4805048/how-to-get-different-colored-lines-for-different-plots-in-a-single-figure
colormap = plt.cm.gist_ncar
plt.gca().set_color_cycle([colormap(i) for i in np.linspace(0, 0.9, num_plots)])

# Hide ticks on x-axis and y-axis
plt.gca().set_xticklabels([])
plt.gca().set_yticklabels([])

# Plot with legend
line_up = plt.plot([1,2,3], label='Line 2')
line_down = plt.plot([3,2,1], label='Line 1')
plt.legend(loc='upper left')

# Get color ranges: http://matplotlib.org/users/colormaps.html
cmap = matplotlib.cm.get_cmap('Spectral')  # Try brg
[matplotlib.colors.rgb2hex(cmap(coltone)) 
  for coltone in np.linspace(0, 1, num=xm2_n_clusters)]

# Draw correlation matrix heatmap
import seaborn as sns
import matplotlib.pyplot as plt
sns.set(context="paper", font="monospace")

# Load the datset of correlations between cortical brain networks
df = sns.load_dataset("brain_networks", header=[0, 1, 2], index_col=0)
corrmat = df.corr()

# Set up the matplotlib figure
f, ax = plt.subplots(figsize=(8, 5))

# Draw the heatmap using seaborn
sns.heatmap(corrmat, vmax=.8, square=True)

f.tight_layout()

# Show gridlines
ax.grid(b=True, which='minor', color='b', linestyle='-'))
ax.grid(b=True, which='major')
ax.minorticks_on()