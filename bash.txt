# Loop with step
for i in {0..10..2}
do
  ..
done

# Looping through all lines in a file
# http://stackoverflow.com/questions/1521462/looping-through-the-content-of-a-file-in-bash
while read p; do
  echo $p
done < FILEPATH.txt
# Single line
while read p; do echo $p; done <users.txt

# Pad zero in string
n=1
wget http://aolradio.podcast.aol.com/sn/SN-`printf %03d $n`.mp3

# Run command or get env var
${HOME}
$(echo foo)

# Brace expansion 
# http://unix.stackexchange.com/questions/315963/bash-command-to-copy-before-cursor-and-paste-after
echo a{b,c,d{e,f,g}}
ab ac ade adf adg

# Check if env variable is set
# https://stackoverflow.com/questions/11686208/check-if-environment-variable-is-already-set
# https://stackoverflow.com/questions/2981878/checking-for-environment-variables
if [ -z "$VARIABLE" ]; then
    VARIABLE=...
fi
# Quick check return code
[ -z ${PATH} ]; echo $?  # Return 1
[ -z ${SHOULD_NOT_EXIST} ]; echo $?  # Return 0

# Paremeter substitution: If VARIABLE is not set, set it to 'abc'
VARIABLE="${VARIABLE:=abc}"

# Check if variable is set
# Note that in ./command abc def, $0 = command, $1 = abc, $2 = def
if [ -z $0 ]; then echo '0 is unset'; else echo '0 is set'; fi
if [ -z $1 ]; then echo '1 is unset'; else echo '1 is set'; fi
if [ -z $2 ]; then echo '2 is unset'; else echo '2 is set'; fi

# Pass literal tab character with $'\t'
sort -t $'\t'