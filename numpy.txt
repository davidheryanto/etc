# Numpy: Check which blas library is used
# http://stackoverflow.com/questions/21671040/link-atlas-mkl-to-an-installed-numpy
np.show_config()
np.__config__.show()
ldd /<path_to_site-packages>/numpy/core/_dotblas.so

# Install numpy with openblas
http://stackoverflow.com/questions/11443302/compiling-numpy-with-openblas-integration

# Numpy benchmark performance
# http://stackoverflow.com/questions/5260068/multithreaded-blas-in-python-numpy
size=3000
import numpy as np
a = np.random.random_sample((size,size))
b = np.random.random_sample((size,size))
%timeit np.dot(a,b)

8 core Xeon E5-2660 @ 2.20 GHz
-- 1 loops, best of 3: 877 ms per loop
2 core i3-3220 @ 3.30 GHz
-- 1 loops, best of 3: 1.17 s per loop (MKL)
-- 1 loops, best of 3: 1.69 s per loop
4 core i7-2630QM @ 2.00 GHz
-- 1 loops, best of 3: 910 ms per loop (MKL)
-- 1 loops, best of 3: 1.65 s per loop (openblas)
2 core i5-3337U @ 1.80 GHz
-- 1 loops, best of 3: 1.51 s per loop (MKL)
-- 1 loops, best of 3: 3.25 s per loop (MKL, Linux VM)

# Numpy pretty print optionsls
np.set_printoptions(formatter={'float': '{: 0.3f}'.format})

# Convert True/False array to indices of True
A = [True, False, True, True]
A.nonzero()

# Build numpy with MKL - as of 20151214
# https://software.intel.com/en-us/articles/numpyscipy-with-intel-mkl
# source /opt/intel/bin/compilervars.sh intel64
[mkl]
library_dirs = /opt/intel/mkl/lib/intel64
include_dirs = /opt/intel/mkl/include
mkl_libs = mkl_rt
lapack_libs = mkl_lapack95_ilp64