# Loop through files in dir
Get-ChildItem "C:\Users\gerhardl\Documents\My Received Files" -Filter *.log | `
Foreach-Object{
    $content = Get-Content $_.FullName

    #filter and save content to the original file
    $content | Where-Object {$_ -match 'step[49]'} | Set-Content $_.FullName

    #filter and save content to a new file 
    #$content | Where-Object {$_ -match 'step[49]'} | Set-Content `
  }

# Append text
Add-Content c:\scripts\test.txt "`nThe End"

# Open a file or program
Invoke-Item c:\windows\system32\calc.exe

# Background Process
Start-Process -NoNewWindow ping google.com
Start-Job {get-process winrm}
Get-Job

# 'which' equivalent in Unix
 Get-Command asadmin | Format-Table Path,Name

# Check which port open
netstat -an

# View environment variables in powershell
http://technet.microsoft.com/en-us/library/ff730964.aspx
Get-ChildItem Env:

# Set environment variables
$env:TestVariable = "This is a test environment variable."

# Set execution policy only for current user
Set-ExecutionPolicy Unrestricted -Scope CurrentUser

# PowerShell version
$PSVersionTable.PSVersion

# Elevate privileges in powershell
Start-Process powershell -Verb runAs

# rm -rf
Remove 'file-to-remove' -Recurse -Force

# Find out what trigger last wake
powercfg -lastwake

# Find out devices that can wake machines
powercfg -devicequery wake_armed

# Input redirection in powershell i.e. how to use <
./program < input.txt > output.txt 
Get-Content input.txt | ./program > output.txt

# Remove alias
Remove-Item alias:edit
# http://superuser.com/questions/883914/how-do-i-permanently-remove-a-default-powershell-alias
# Create default profile, skip if profile already exists
New-Item $profile -force -itemtype file  
notepad $profile
remove-item alias:curl

# Change prompt color, must enable script execution 
# > Set-ExecutionPolicy RemoteSigned -Scope CurrentUser -Confirm
# http://superuser.com/questions/446827/configure-the-windows-powershell-to-display-only-the-current-folder-name-in-the
function GetComputerName
{
  # if you want FQDN
  # $ipProperties = [System.Net.NetworkInformation.IPGlobalProperties]::GetIPGlobalProperties()
  # "{0}@{1}" -f $ipProperties.HostName, $ipProperties.DomainName

  # if you want host name only
  $env:computername
}

# Set up a simple prompt, adding the git prompt parts inside git repos
function global:prompt {
    $realLASTEXITCODE = $LASTEXITCODE

    # write computer name with color
    $cn = GetComputerName
    Write-Host "[${cn}]" -Fore ([ConsoleColor]::Green) -NoNew

    Write-Host(Split-Path -leaf -path (Get-Location)) -Fore ([ConsoleColor]::Magenta) -nonewline

    $global:LASTEXITCODE = $realLASTEXITCODE
    return "$ "
}

# Find MAC address
getmac.exe

# Install Posh-Git or https://github.com/dahlbyk/posh-git
Set-ExecutionPolicy RemoteSigned -Scope CurrentUser -Confirm
(new-object Net.WebClient).DownloadString("http://psget.net/GetPsGet.ps1") | iex
Install-Module posh-git
# Credential Helper
https://gitcredentialstore.codeplex.com/
# If Set-ExecutionPolicy not working
# http://stackoverflow.com/questions/4037939/powershell-says-execution-of-scripts-is-disabled-on-this-system
Run as admin: C:\Windows\system32\cmd.exe; powershell Set-ExecutionPolicy RemoteSigned
Run as admin: C:\Windows\SysWOW64\cmd.exe; powershell Set-ExecutionPolicy RemoteSigned

# Get environment variable
$env:varname

# Remove environment variable
Remove-Item Env:\varname

# Reload PATH environment variable
$env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")

# Connect wifi
netsh wlan show profiles
netsh wlan connect name=HANSELMAN-N