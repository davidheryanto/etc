# Serve response w/o file
# https://serverfault.com/questions/196929/reply-with-200-from-nginx-config-without-serving-a-file
location / {
    return 200 'gangnam style!';
    # because default content-type is application/octet-stream,
    # browser will offer to "save the file"...
    # if you want to see reply in browser, uncomment next line 
    add_header Content-Type text/plain;
}

# Check configuration syntax
sudo nginx -t

# Reload configuration
sudo nginx -s reload

Reverse proxy
============================================================

http://www.nikola-breznjak.com/blog/javascript/nodejs/using-nginx-as-a-reverse-proxy-in-front-of-your-node-js-application/

location / {
    proxy_pass http://127.0.0.1:8080;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
}

# Basic auth: https://www.digitalocean.com/community/tutorials/how-to-set-up-password-authentication-with-nginx-on-ubuntu-14-04
# Create apache variant md5 password
export PASSFILE=/etc/nginx/.htpasswd
sudo sh -c "echo -n 'myuser:' >> $PASSFILE"
sudo sh -c "openssl passwd -apr1 >> $PASSFILE"  # It will prompt for password
cat $PASSFILE

server {
    ...
    location / {
        ...
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }
}


Reload configuration
============================================================
nginx -s reload


Extras
============================================================

Lua nginx module
------------------------------------------------------------

https://github.com/openresty/lua-nginx-module

Useful for logging response body
https://serverfault.com/questions/361556/is-it-possible-to-log-the-response-data-in-nginx-access-log

http {
    log_format log_req_resp '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $body_bytes_sent '
        '"$http_referer" "$http_user_agent" $request_time req_body:"$request_body" resp_body:"$resp_body"';

    server {
        listen 8082;
        access_log logs/access.log log_req_resp;

        lua_need_request_body on;

        set $resp_body "";
        body_filter_by_lua '
            local resp_body = string.sub(ngx.arg[1], 1, 1000)
            ngx.ctx.buffered = (ngx.ctx.buffered or "") .. resp_body
            if ngx.arg[2] then
                ngx.var.resp_body = ngx.ctx.buffered
            end
        ';

        location / {
            echo "Hello World!";
        }
    }
}


Docker / Kubernetes
============================================================
To redirect access log to stdout: https://github.com/moby/moby/issues/19616

# nginx.conf
access_log   /proc/1/fd/1

Tips on compilation
============================================================
What are good options when ./configure:
https://www.digitalocean.com/community/tutorials/how-to-compile-nginx-from-source-on-a-centos-6-4-x64-vps

./configure \
--user=nginx                          \
--group=nginx                         \
--prefix=/etc/nginx                   \
--sbin-path=/usr/sbin/nginx           \
--conf-path=/etc/nginx/nginx.conf     \
--pid-path=/var/run/nginx.pid         \
--lock-path=/var/run/nginx.lock       \
--error-log-path=/var/log/nginx/error.log \
--http-log-path=/var/log/nginx/access.log \
--with-http_gzip_static_module        \
--with-http_stub_status_module        \
--with-http_ssl_module                \
--with-pcre                           \
--with-file-aio                       \
--with-http_realip_module             \
--without-http_scgi_module            \
--without-http_uwsgi_module           \
--without-http_fastcgi_module