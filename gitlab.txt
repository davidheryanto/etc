# Run gitlab ci locally
# https://substrakt.com/how-to-debug-gitlab-ci-builds-locally/
# https://gitlab.com/gitlab-org/gitlab-ci-multi-runner/issues/312
# 1. Install Docker
# 2. Install gitlab runner
gitlab-ci-multi-runner exec docker JOB_NAME --docker-privileged

# Using personal access token to clone/pull
git clone https://source.golabs.io:[PERSONAL_ACCESS_TOKEN]@source.golabs.io/data-science/[REPO_NAME].git

# Gitlab Runner
============================================================

Utility script to register runner
------------------------------------------------------------

$ vim register-runner (then chmod to 755)

#!/bin/bash

# We need these options in gitlab-ci-multi-runner:
# --docker-volumes: To share Docker socket with the host, and to share SSL public keys
# --env GIT_SSL_CAINFO: Somehow git won't use the SSL public keys defined in /etc/ssl/certs, and we need to specifically define it here
# --env DOCKER_DRIVER: For better I/O performance (See https://docs.gitlab.com/ce/ci/docker/using_docker_build.html#using-the-overlayfs-driver)


if [ -z $1 ]; then 
	echo ">>> register-runner requires 1 argument: the registration token"
    echo "Usage: register-runner xxxx-xxxxxxxxxx"
	exit 1
fi

TOKEN=$1

sudo gitlab-ci-multi-runner register -n \
  --url https://gitlab.com/ \
  --registration-token $TOKEN \
  --executor docker \
  --description "My Gitlab Runner" \
  --docker-image "docker:latest" \
  --docker-volumes /var/run/docker.sock:/var/run/docker.sock \
  --docker-volumes /etc/ssl/certs:/etc/ssl/certs:ro \
  --env GIT_SSL_CAINFO=/etc/ssl/certs/ca-certificates.crt \
  --env DOCKER_DRIVER=overlay2


Clean up /etc/gitlab-runner/config.toml
------------------------------------------------------------
Delete runners that is no longer used

# https://gitlab.com/gitlab-org/gitlab-runner/issues/237

gitlab-runner verify --delete